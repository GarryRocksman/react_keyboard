{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyupHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,WAAYE,EAAME,OAfxB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACGF,KAAKR,MAAMC,WAER,oBAAGS,UAAU,eAAb,sCAEGF,KAAKR,MAAMC,WAFd,OAOA,mBAAGS,UAAU,eAAb,2CA/BZ,GAAyBC,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.70b782e0.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyupHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyupHandler);\n  }\n\n  keyupHandler = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.pressedKey\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {this.state.pressedKey}\n              ]\n            </p>\n          )\n          : (\n            <p className=\"App__message\">\n              Nothing was pressed yet\n            </p>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}